// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: api/listing/listing.proto

package listing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Attribute_Source int32

const (
	Attribute_SOURCE_UNSPECIFIED             Attribute_Source = 0
	Attribute_SOURCE_MAPPED_FROM_CODEC       Attribute_Source = 1
	Attribute_SOURCE_ATTRIBUTE_OVERRIDE      Attribute_Source = 2
	Attribute_SOURCE_ATTRIBUTE_DEFAULT_VALUE Attribute_Source = 3
)

// Enum value maps for Attribute_Source.
var (
	Attribute_Source_name = map[int32]string{
		0: "SOURCE_UNSPECIFIED",
		1: "SOURCE_MAPPED_FROM_CODEC",
		2: "SOURCE_ATTRIBUTE_OVERRIDE",
		3: "SOURCE_ATTRIBUTE_DEFAULT_VALUE",
	}
	Attribute_Source_value = map[string]int32{
		"SOURCE_UNSPECIFIED":             0,
		"SOURCE_MAPPED_FROM_CODEC":       1,
		"SOURCE_ATTRIBUTE_OVERRIDE":      2,
		"SOURCE_ATTRIBUTE_DEFAULT_VALUE": 3,
	}
)

func (x Attribute_Source) Enum() *Attribute_Source {
	p := new(Attribute_Source)
	*p = x
	return p
}

func (x Attribute_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_api_listing_listing_proto_enumTypes[0].Descriptor()
}

func (Attribute_Source) Type() protoreflect.EnumType {
	return &file_api_listing_listing_proto_enumTypes[0]
}

func (x Attribute_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute_Source.Descriptor instead.
func (Attribute_Source) EnumDescriptor() ([]byte, []int) {
	return file_api_listing_listing_proto_rawDescGZIP(), []int{1, 0}
}

// Listing is a representation of a product to be sold on a Channel
type Listing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId    string       `protobuf:"bytes,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	ProductTypeId string       `protobuf:"bytes,3,opt,name=product_type_id,json=productTypeId,proto3" json:"product_type_id,omitempty"`
	Attributes    []*Attribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	// the channel
	// These should be in the order that are intended to be displayed one
	Variants []*Listing_Variant `protobuf:"bytes,5,rep,name=variants,proto3" json:"variants,omitempty"`
	// These are attribute IDs that should have a corresponding Attribute in each
	// Variant's list of Attributes
	PivotAttributes []string               `protobuf:"bytes,6,rep,name=pivot_attributes,json=pivotAttributes,proto3" json:"pivot_attributes,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Listing) Reset() {
	*x = Listing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_listing_listing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing) ProtoMessage() {}

func (x *Listing) ProtoReflect() protoreflect.Message {
	mi := &file_api_listing_listing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing.ProtoReflect.Descriptor instead.
func (*Listing) Descriptor() ([]byte, []int) {
	return file_api_listing_listing_proto_rawDescGZIP(), []int{0}
}

func (x *Listing) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Listing) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *Listing) GetProductTypeId() string {
	if x != nil {
		return x.ProductTypeId
	}
	return ""
}

func (x *Listing) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Listing) GetVariants() []*Listing_Variant {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *Listing) GetPivotAttributes() []string {
	if x != nil {
		return x.PivotAttributes
	}
	return nil
}

func (x *Listing) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Listing) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Attribute has data that describes a Listing or a Listing's Variants
type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Value:
	//	*Attribute_TextValue
	//	*Attribute_NumericValue
	//	*Attribute_NumericWithUnitsValue
	//	*Attribute_MultiTextValue
	Value  isAttribute_Value `protobuf_oneof:"value"`
	Source Attribute_Source  `protobuf:"varint,6,opt,name=source,proto3,enum=listing_api.Attribute_Source" json:"source,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_listing_listing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_listing_listing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_api_listing_listing_proto_rawDescGZIP(), []int{1}
}

func (x *Attribute) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Attribute) GetValue() isAttribute_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Attribute) GetTextValue() string {
	if x, ok := x.GetValue().(*Attribute_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *Attribute) GetNumericValue() float64 {
	if x, ok := x.GetValue().(*Attribute_NumericValue); ok {
		return x.NumericValue
	}
	return 0
}

func (x *Attribute) GetNumericWithUnitsValue() *Attribute_NumericWithUnits {
	if x, ok := x.GetValue().(*Attribute_NumericWithUnitsValue); ok {
		return x.NumericWithUnitsValue
	}
	return nil
}

func (x *Attribute) GetMultiTextValue() *Attribute_MultiText {
	if x, ok := x.GetValue().(*Attribute_MultiTextValue); ok {
		return x.MultiTextValue
	}
	return nil
}

func (x *Attribute) GetSource() Attribute_Source {
	if x != nil {
		return x.Source
	}
	return Attribute_SOURCE_UNSPECIFIED
}

type isAttribute_Value interface {
	isAttribute_Value()
}

type Attribute_TextValue struct {
	TextValue string `protobuf:"bytes,2,opt,name=text_value,json=textValue,proto3,oneof"`
}

type Attribute_NumericValue struct {
	NumericValue float64 `protobuf:"fixed64,3,opt,name=numeric_value,json=numericValue,proto3,oneof"`
}

type Attribute_NumericWithUnitsValue struct {
	NumericWithUnitsValue *Attribute_NumericWithUnits `protobuf:"bytes,4,opt,name=numeric_with_units_value,json=numericWithUnitsValue,proto3,oneof"`
}

type Attribute_MultiTextValue struct {
	MultiTextValue *Attribute_MultiText `protobuf:"bytes,5,opt,name=multi_text_value,json=multiTextValue,proto3,oneof"`
}

func (*Attribute_TextValue) isAttribute_Value() {}

func (*Attribute_NumericValue) isAttribute_Value() {}

func (*Attribute_NumericWithUnitsValue) isAttribute_Value() {}

func (*Attribute_MultiTextValue) isAttribute_Value() {}

type Listing_Variant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sku        string       `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	Attributes []*Attribute `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	// total_inventory should be the sum of merchant_fulfillable_inventory
	// and storefront_fulfillable_inventory
	TotalInventory                 int64 `protobuf:"varint,3,opt,name=total_inventory,json=totalInventory,proto3" json:"total_inventory,omitempty"`
	MerchantFulfillableInventory   int64 `protobuf:"varint,4,opt,name=merchant_fulfillable_inventory,json=merchantFulfillableInventory,proto3" json:"merchant_fulfillable_inventory,omitempty"`
	StorefrontFulfillableInventory int64 `protobuf:"varint,5,opt,name=storefront_fulfillable_inventory,json=storefrontFulfillableInventory,proto3" json:"storefront_fulfillable_inventory,omitempty"`
	// Any Integration-level Settings will be merged
	// with Variant-level Settings to produce these Settings.
	Settings *Settings `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *Listing_Variant) Reset() {
	*x = Listing_Variant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_listing_listing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listing_Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listing_Variant) ProtoMessage() {}

func (x *Listing_Variant) ProtoReflect() protoreflect.Message {
	mi := &file_api_listing_listing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listing_Variant.ProtoReflect.Descriptor instead.
func (*Listing_Variant) Descriptor() ([]byte, []int) {
	return file_api_listing_listing_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Listing_Variant) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *Listing_Variant) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Listing_Variant) GetTotalInventory() int64 {
	if x != nil {
		return x.TotalInventory
	}
	return 0
}

func (x *Listing_Variant) GetMerchantFulfillableInventory() int64 {
	if x != nil {
		return x.MerchantFulfillableInventory
	}
	return 0
}

func (x *Listing_Variant) GetStorefrontFulfillableInventory() int64 {
	if x != nil {
		return x.StorefrontFulfillableInventory
	}
	return 0
}

func (x *Listing_Variant) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// NumericWithUnits supports values like 1 lb
type Attribute_NumericWithUnits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numeric float64 `protobuf:"fixed64,1,opt,name=numeric,proto3" json:"numeric,omitempty"`
	Units   string  `protobuf:"bytes,2,opt,name=units,proto3" json:"units,omitempty"`
}

func (x *Attribute_NumericWithUnits) Reset() {
	*x = Attribute_NumericWithUnits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_listing_listing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute_NumericWithUnits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_NumericWithUnits) ProtoMessage() {}

func (x *Attribute_NumericWithUnits) ProtoReflect() protoreflect.Message {
	mi := &file_api_listing_listing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_NumericWithUnits.ProtoReflect.Descriptor instead.
func (*Attribute_NumericWithUnits) Descriptor() ([]byte, []int) {
	return file_api_listing_listing_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Attribute_NumericWithUnits) GetNumeric() float64 {
	if x != nil {
		return x.Numeric
	}
	return 0
}

func (x *Attribute_NumericWithUnits) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

// MultiText supports a value that has multiple sub-values
// (e.g. bullet points)
type Attribute_MultiText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Attribute_MultiText) Reset() {
	*x = Attribute_MultiText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_listing_listing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute_MultiText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_MultiText) ProtoMessage() {}

func (x *Attribute_MultiText) ProtoReflect() protoreflect.Message {
	mi := &file_api_listing_listing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_MultiText.ProtoReflect.Descriptor instead.
func (*Attribute_MultiText) Descriptor() ([]byte, []int) {
	return file_api_listing_listing_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Attribute_MultiText) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_api_listing_listing_proto protoreflect.FileDescriptor

var file_api_listing_listing_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x05, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xbf, 0x02,
	0x0a, 0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x36, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x1e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x1c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x48, 0x0a, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x5f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0xc2, 0x04, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25,
	0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x62, 0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e,
	0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x57, 0x69, 0x74, 0x68, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x48, 0x00, 0x52, 0x15, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x57, 0x69, 0x74, 0x68, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x65,
	0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x42,
	0x0a, 0x10, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x57, 0x69, 0x74, 0x68, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x69,
	0x74, 0x73, 0x1a, 0x23, 0x0a, 0x09, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x43, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x4f, 0x56, 0x45,
	0x52, 0x52, 0x49, 0x44, 0x45, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x41,
	0x55, 0x4c, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x03, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x68, 0x64, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_listing_listing_proto_rawDescOnce sync.Once
	file_api_listing_listing_proto_rawDescData = file_api_listing_listing_proto_rawDesc
)

func file_api_listing_listing_proto_rawDescGZIP() []byte {
	file_api_listing_listing_proto_rawDescOnce.Do(func() {
		file_api_listing_listing_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_listing_listing_proto_rawDescData)
	})
	return file_api_listing_listing_proto_rawDescData
}

var file_api_listing_listing_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_listing_listing_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_listing_listing_proto_goTypes = []interface{}{
	(Attribute_Source)(0),              // 0: listing_api.Attribute.Source
	(*Listing)(nil),                    // 1: listing_api.Listing
	(*Attribute)(nil),                  // 2: listing_api.Attribute
	(*Listing_Variant)(nil),            // 3: listing_api.Listing.Variant
	(*Attribute_NumericWithUnits)(nil), // 4: listing_api.Attribute.NumericWithUnits
	(*Attribute_MultiText)(nil),        // 5: listing_api.Attribute.MultiText
	(*timestamppb.Timestamp)(nil),      // 6: google.protobuf.Timestamp
	(*Settings)(nil),                   // 7: listing_api.Settings
}
var file_api_listing_listing_proto_depIdxs = []int32{
	2, // 0: listing_api.Listing.attributes:type_name -> listing_api.Attribute
	3, // 1: listing_api.Listing.variants:type_name -> listing_api.Listing.Variant
	6, // 2: listing_api.Listing.created_at:type_name -> google.protobuf.Timestamp
	6, // 3: listing_api.Listing.updated_at:type_name -> google.protobuf.Timestamp
	4, // 4: listing_api.Attribute.numeric_with_units_value:type_name -> listing_api.Attribute.NumericWithUnits
	5, // 5: listing_api.Attribute.multi_text_value:type_name -> listing_api.Attribute.MultiText
	0, // 6: listing_api.Attribute.source:type_name -> listing_api.Attribute.Source
	2, // 7: listing_api.Listing.Variant.attributes:type_name -> listing_api.Attribute
	7, // 8: listing_api.Listing.Variant.settings:type_name -> listing_api.Settings
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_api_listing_listing_proto_init() }
func file_api_listing_listing_proto_init() {
	if File_api_listing_listing_proto != nil {
		return
	}
	file_api_listing_settings_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_listing_listing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_listing_listing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_listing_listing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listing_Variant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_listing_listing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute_NumericWithUnits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_listing_listing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute_MultiText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_listing_listing_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Attribute_TextValue)(nil),
		(*Attribute_NumericValue)(nil),
		(*Attribute_NumericWithUnitsValue)(nil),
		(*Attribute_MultiTextValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_listing_listing_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_listing_listing_proto_goTypes,
		DependencyIndexes: file_api_listing_listing_proto_depIdxs,
		EnumInfos:         file_api_listing_listing_proto_enumTypes,
		MessageInfos:      file_api_listing_listing_proto_msgTypes,
	}.Build()
	File_api_listing_listing_proto = out.File
	file_api_listing_listing_proto_rawDesc = nil
	file_api_listing_listing_proto_goTypes = nil
	file_api_listing_listing_proto_depIdxs = nil
}
