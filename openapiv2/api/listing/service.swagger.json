{
  "swagger": "2.0",
  "info": {
    "title": "Listings API",
    "version": "v2"
  },
  "tags": [
    {
      "name": "ListingService",
      "description": "Listings Service provides a service for listing related operations\nThis includes retrieving listings as well as sending back statuses to Zentail"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/storefront/v2/listing/new": {
      "get": {
        "summary": "ListNewListings will list any listing created or updated\nsince the given timestamp where:",
        "description": "1. Product data is enabled for at least one Variant in the Listing\n\n2. No variants have a channel ID",
        "operationId": "ListingService_ListNewListings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiListListingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/storefront/v2/listing/product_data/updated": {
      "get": {
        "summary": "ListUpdateListings will return any listing that:",
        "description": "1. Has at least one Variant with a channel ID\n\n2. Has a Product Data change since the last timestamp (including Variants)\n\n3. Product Data is enabled for the Listing",
        "operationId": "ListingService_ListUpdatedListings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiListListingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/storefront/v2/listing/sku/{sku}": {
      "get": {
        "summary": "GetBySKU retrieves a single listing which contains a variant with the given\nSKU",
        "operationId": "ListingService_GetBySKU",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiListing"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/storefront/v2/listing/variant/inventory/updated": {
      "get": {
        "summary": "ListVariantsWithUpdatedInventory will return any variant that:",
        "description": "1. Has an inventory change since the last timestamp\n\n2. Inventory Data is enabled for the Variant",
        "operationId": "ListingService_ListVariantsWithUpdatedInventory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiListVariantsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "externalChangesOnly",
            "description": "Only return variants with inventory changes that have happened\noutside of sales on this channel.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/storefront/v2/listing/variant/pricing/updated": {
      "get": {
        "summary": "ListVariantsWithUpdatedPricing will return any variant that:",
        "description": "1. Has a pricing change since the last timestamp\n\n2. Pricing Data is enabled for the Variant",
        "operationId": "ListingService_ListVariantsWithUpdatedPricing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiListVariantsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/storefront/v2/listing/variant/{sku}": {
      "get": {
        "summary": "GetVariant retrieves a single variant by its SKU",
        "operationId": "ListingService_GetVariant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiVariant"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/storefront/v2/listing/{listingId}": {
      "get": {
        "summary": "Get retrieves a single listing by its ID",
        "operationId": "ListingService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiListing"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/v2/storefront/listing/submission": {
      "post": {
        "summary": "ReplaceSubmissions replaces the submissions for a variant",
        "operationId": "ListingService_ReplaceSubmissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiReplaceSubmissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/listing_apiReplaceSubmissionsRequest"
            }
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/v2/storefront/listing/submission/{submissionId}/inventory": {
      "post": {
        "summary": "SetInventorySubmissionDetails is used to set the inventory details for a\ngiven submission",
        "operationId": "ListingService_SetInventorySubmissionDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiSetInventorySubmissionDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inventoryLevelSent": {
                  "type": "string",
                  "format": "int64"
                },
                "successful": {
                  "type": "boolean"
                }
              },
              "title": "SetInventorySubmissionDetailsRequest is used to create inventory submission\ndetails"
            }
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/v2/storefront/listing/variant/{sku}/channel_id": {
      "post": {
        "summary": "UpdateChannelListingID updates the channel ID for the listing",
        "operationId": "ListingService_UpdateChannelListingID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiUpdateChannelListingIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "channelId": {
                  "type": "string"
                }
              },
              "title": "UpdateChannelListingIDRequest provides the status of a SKU"
            }
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/v2/storefront/listing/variant/{sku}/errors": {
      "post": {
        "summary": "ReplaceErrors replaces the errors for a variant",
        "operationId": "ListingService_ReplaceErrors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiReplaceErrorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/listing_apiError"
                  }
                }
              },
              "title": "ReplaceErrorsRequest provides all the channel-generated errors for a SKU"
            }
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    },
    "/v2/storefront/listing/variant/{sku}/status": {
      "post": {
        "summary": "UpdateStatus updates the status of a listing",
        "operationId": "ListingService_UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listing_apiUpdateStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "$ref": "#/definitions/listing_apiStandardStatus"
                },
                "channelStatus": {
                  "type": "string"
                },
                "channelId": {
                  "type": "string",
                  "description": "The channel's ID for this particular SKU.\nShould be more specific than Listing."
                },
                "listingUrl": {
                  "type": "string"
                }
              },
              "title": "UpdateStatusRequest provides the status of a SKU"
            }
          }
        ],
        "tags": [
          "ListingService"
        ]
      }
    }
  },
  "definitions": {
    "AttributeMultiText": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "MultiText supports a value that has multiple sub-values\n(e.g. bullet points)"
    },
    "AttributeNumericWithUnits": {
      "type": "object",
      "properties": {
        "numeric": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string"
        }
      },
      "title": "NumericWithUnits supports values like 1 lb"
    },
    "ErrorSeverity": {
      "type": "string",
      "enum": [
        "SEVERITY_UNSPECIFIED",
        "SEVERITY_NOTICE",
        "SEVERITY_WARNING",
        "SEVERITY_ERROR"
      ],
      "default": "SEVERITY_UNSPECIFIED"
    },
    "ListingProductData": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "categoryId": {
          "type": "string"
        },
        "productTypeId": {
          "type": "string"
        },
        "pivotAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listing_apiAttribute"
          }
        }
      }
    },
    "VariantAttributes": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listing_apiAttribute"
          }
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Attributes is a container for a list of attributes of a similar\nclassification"
    },
    "VariantInventory": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "totalQuantity": {
          "type": "string",
          "format": "int64",
          "title": "total_quantity should be the sum of merchant_fulfillable_inventory\nand storefront_fulfillable_quantity"
        },
        "merchantFulfillableQuantity": {
          "type": "string",
          "format": "int64"
        },
        "storefrontFulfillableQuantity": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedExternallyAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Inventory contains information about the availability of this variant"
    },
    "listing_apiAttribute": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "textValue": {
          "type": "string"
        },
        "numericValue": {
          "type": "number",
          "format": "double"
        },
        "numericWithUnitsValue": {
          "$ref": "#/definitions/AttributeNumericWithUnits"
        },
        "multiTextValue": {
          "$ref": "#/definitions/AttributeMultiText"
        }
      },
      "title": "Attribute has data that describes a Listing or a Listing's Variants"
    },
    "listing_apiError": {
      "type": "object",
      "properties": {
        "attributeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "One or more attributes that this error applies to"
        },
        "severity": {
          "$ref": "#/definitions/ErrorSeverity"
        },
        "type": {
          "$ref": "#/definitions/listing_apiErrorType"
        },
        "message": {
          "type": "string",
          "title": "Message is required if Type is TYPE_OTHER"
        }
      }
    },
    "listing_apiErrorType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_MISSING_VALUE",
        "TYPE_INVALID_VALUE",
        "TYPE_RESTRICTED_VALUE",
        "TYPE_OTHER"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "listing_apiListListingsResponse": {
      "type": "object",
      "properties": {
        "listings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listing_apiListing"
          }
        },
        "nextPageCursor": {
          "type": "string",
          "description": "The cursor token for the next page of results.\nIf empty, there are no more results."
        }
      },
      "title": "ListListingsResponse is the response object containing a list of Listings"
    },
    "listing_apiListVariantsResponse": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listing_apiVariant"
          }
        },
        "nextPageCursor": {
          "type": "string",
          "description": "The cursor token for the next page of results.\nIf empty, there are no more results."
        }
      },
      "title": "ListVariantsResponse is the response object containing a list of Variants"
    },
    "listing_apiListing": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productData": {
          "$ref": "#/definitions/ListingProductData"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listing_apiVariant"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Listing is a representation of a product to be sold on a Channel\nLATER: comment this more"
    },
    "listing_apiReplaceErrorsResponse": {
      "type": "object",
      "title": "ReplaceErrorsResponse is empty"
    },
    "listing_apiReplaceSubmissionsRequest": {
      "type": "object",
      "properties": {
        "submissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listing_apiSubmission"
          }
        }
      },
      "title": "ReplaceSubmissionsRequest is used to replace all submissions for the given\ntype and sku"
    },
    "listing_apiReplaceSubmissionsResponse": {
      "type": "object",
      "properties": {
        "submissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listing_apiSubmission"
          }
        }
      },
      "title": "ReplaceSubmissionsResponse contains the submissions created"
    },
    "listing_apiSetInventorySubmissionDetailsResponse": {
      "type": "object",
      "title": "SetInventorySubmissionDetailsResponse is currently an empty response"
    },
    "listing_apiStandardStatus": {
      "type": "string",
      "enum": [
        "STANDARD_STATUS_UNSPECIFIED",
        "STANDARD_STATUS_PUBLISHED",
        "STANDARD_STATUS_UNPUBLISHED",
        "STANDARD_STATUS_SUPPRESSED",
        "STANDARD_STATUS_RETIRED"
      ],
      "default": "STANDARD_STATUS_UNSPECIFIED",
      "title": "StandardStatus is the standardized status of a listing as defined by Zentail"
    },
    "listing_apiSubmission": {
      "type": "object",
      "properties": {
        "submissionId": {
          "type": "string",
          "format": "int64",
          "title": "submission_id is returned by the API, setting this when calling\nReplaceSubmissions will have no effect"
        },
        "sku": {
          "type": "string"
        },
        "contentSent": {
          "type": "string"
        },
        "contentReceived": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "title": "type is a user-specified type which is used to match like submissions when\ndoing a replace operation"
        },
        "successful": {
          "type": "boolean"
        },
        "preparedAt": {
          "type": "string",
          "format": "date-time"
        },
        "submittedAt": {
          "type": "string",
          "format": "date-time"
        },
        "acknowledgedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Submission represents specific data sent to a channel for a particular SKU"
    },
    "listing_apiUpdateChannelListingIDResponse": {
      "type": "object",
      "title": "UpdateChannelListingIDResponse is empty"
    },
    "listing_apiUpdateStatusResponse": {
      "type": "object",
      "title": "UpdateStatusResponse is empty"
    },
    "listing_apiVariant": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "channelId": {
          "type": "string"
        },
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Any Integration-level Settings will be merged\nwith Variant-level Settings to produce these Settings."
        },
        "inventory": {
          "$ref": "#/definitions/VariantInventory",
          "title": "LATER: do we need desired_status / intended action?"
        },
        "productData": {
          "$ref": "#/definitions/VariantAttributes"
        },
        "pricing": {
          "$ref": "#/definitions/VariantAttributes"
        },
        "logistics": {
          "$ref": "#/definitions/VariantAttributes"
        }
      },
      "title": "Variant is a representation of a specific SKU in a listing\nLATER: comment this more"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
